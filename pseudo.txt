Data Flow
    - DataManager is the router of information
        - stores the ProjectArray, an array of Projects
        - each Project contains a projectTasks array, an array of Tasks
    - on startup:
        - StorageController checks localStorage
            - parses any data, sends to DataManager to process objects
            - if empty, return false
                - set initial state with "My Tasks" project with no tasks
    - DataManager receives data from event listeners
        - creates Projects
        - creates Tasks
        - assigns Tasks to Projects
        - assigns Project to projectArray
    - ScreenController receives data from event listeners and reads projectArray
        - see UI section, not fleshed out yet
    - StorageController reads projectArray, stringifys and sends to localStorage
        - DataManager calls it?

OBJECTS
    - Task
        - created via factory function
        - Properties:
            - taskID
                - crypto.randomUUID()
            - taskName
                - getter/setter
            - taskDescription
                - getter/setter
            - taskDueDate
                - getter/setter
            - taskPriority
                - getter/setter
            - taskNotes
                - getter/setter
            - checklist box
                - toggle
                - strikethrough when toggled

    - Project
        - created via factory function
        - separate lists of tasks
        - when app is first opened, a 'default' project (My Tasks?) is created that tasks are attached to
        - users can create new projects and decide which project their tasks go into
        - Properties:
            - projectID
                - crypto.randomUUID()
            - projectName
                - getter/setter
            - projectDescription
                - getter/setter
            - projectDueDate
                - getter/setter
            - projectPriority
                - getter/setter
            - projectTasks
                - 
            - notes?
                - getter/setter
            - checklist?

    - DataManager
        - intermediary between data objects (Task, Project) and controller objects (ScreenController, StorageController)
        - receives data from event listeners, sends it where it needs to go:
            - Project factory
            - Task factory
            - ScreenController
            - StorageController
        - the DataManager contains an array of Projects, each project containing zero or more tasks
            projectArray = [{projectID: "9834nhn98",
                            projectName: "My Tasks",
                            projectDescription: "My first list of tasks",
                            projectDueDate: "2025-08-17",
                            projectPriority: "high",
                            projectTasks: [{taskID: "h345h34",
                                            taskName: "do stuff",
                                            taskDescription: "do stuff really well",
                                            taskDueDate: "tomorrow",
                                            taskPriority: "high",
                                            taskNotes: "here are some thoughts on how to do stuff really well"}]}]

    - ScreenController
        - interacts with the DOM, draws content
        - interacts with task and project objects to get the info it needs

    - StorageController
        - interacts with localStorage
        - JSON.stringify() when sending to localStorage
        - JSON.parse() when getting from localStorage
            - destructure when getting JSON data to create the appropriate objects
            - if the structure of JSON is known, should be able to recreate objects

UI
    - view all projects
    - view all tasks in each projects
        - title and dueDate?
        - change colour for priority?
    - expand each task to see/edit its details
    - delete a task

Persistent Storage
    - https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API
    - https://www.freecodecamp.org/news/use-local-storage-in-modern-applications/
    - use localStorage to store data so that todo-list information persists between sessions

NOTES/QUESTIONS
- separate application logic form DOM logic
    - ScreenController
- date-fns (installed) to manipulate dates
    - https://github.com/date-fns/date-fns
- each object is defined in its own module and imported to main.js
    - this means the objects I only need one of (DataManager, ScreenController, StorageController) don't need to be defined as an IIFE
    - defining them as a module inherently protects their scope from polluting into the global scope